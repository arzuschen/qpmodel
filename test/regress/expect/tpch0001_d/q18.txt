select
	c_name,
	c_custkey,
	o_orderkey,
	o_orderdate,
	o_totalprice,
	sum(l_quantity)
from
	customer,
	orders,
	lineitem
where
	o_orderkey in (
		select
			l_orderkey
		from
			lineitem
		group by
			l_orderkey having
				sum(l_quantity) > 300
	)
	and c_custkey = o_custkey
	and o_orderkey = l_orderkey
group by
	c_name,
	c_custkey,
	o_orderkey,
	o_orderdate,
	o_totalprice
order by
	o_totalprice desc,
	o_orderdate
limit 100
Total cost: 132901.25, memory=1556097
PhysicLimit (100) (inccost=132901.25, cost=100, rows=100) (actual rows=0)
    Output: c_name[0],c_custkey[1],o_orderkey[2],o_orderdate[3],o_totalprice[4],{sum(l_quantity)}[5]
    -> PhysicOrder  (inccost=132801.25, cost=82916.25, rows=9007, memory=513399) (actual rows=0)
        Output: c_name[0],c_custkey[1],o_orderkey[2],o_orderdate[3],o_totalprice[4],{sum(l_quantity)}[5]
        Order by: o_totalprice[4], o_orderdate[3]
        -> PhysicHashAgg  (inccost=49885, cost=18915, rows=9007, memory=1026798) (actual rows=0)
            Output: {c_name}[0],{c_custkey}[1],{o_orderkey}[2],{o_orderdate}[3],{o_totalprice}[4],{sum(l_quantity)}[5]
            Aggregates: sum(l_quantity[5])
            Group by: c_name[0], c_custkey[1], o_orderkey[2], o_orderdate[3], o_totalprice[4]
            -> PhysicHashJoin  (inccost=30970, cost=9638, rows=901, memory=8700) (actual rows=0)
                Output: c_name[0],c_custkey[1],o_orderkey[2],o_orderdate[3],o_totalprice[4],l_quantity[5]
                Filter: c_custkey[1]=o_custkey[6]
                -> PhysicGather Threads: 10 (inccost=315, cost=165, rows=150) (actual rows=150)
                    Output: c_name[1],c_custkey[0]
                    -> PhysicScanTable customer (inccost=150, cost=150, rows=15) (actual rows=15, loops=10)
                        Output: c_name[1],c_custkey[0]
                -> PhysicGather Threads: 10 (inccost=21017, cost=6606, rows=6005) (actual rows=0)
                    Output: o_orderkey[0],o_orderdate[1],o_totalprice[2],l_quantity[4],o_custkey[3]
                    -> PhysicHashJoin  (inccost=14411, cost=6906, rows=6005, memory=7200) (actual rows=0, loops=10)
                        Output: o_orderkey[0],o_orderdate[1],o_totalprice[2],l_quantity[4],o_custkey[3]
                        Filter: o_orderkey[0]=l_orderkey[5]
                        -> PhysicScanTable orders (inccost=1500, cost=1500, rows=150) (actual rows=0, loops=10)
                            Output: o_orderkey[0],o_orderdate[4],o_totalprice[3],o_custkey[1]
                            Filter: o_orderkey[0] in @1
                            <InSubqueryExpr> cached 1
                                -> PhysicHashAgg  (inccost=16212, cost=3601, rows=1500, memory=12000) (actual rows=0)
                                    Output: {l_orderkey}[0]
                                    Aggregates: sum(l_quantity[1])
                                    Group by: l_orderkey[0]
                                    Filter: {sum(l_quantity)}[1]>300
                                    -> PhysicGather Threads: 10 (inccost=12611, cost=6606, rows=6005) (actual rows=6005)
                                        Output: l_orderkey[0],l_quantity[4]
                                        -> PhysicScanTable lineitem as lineitem__1 (inccost=6005, cost=6005, rows=601) (actual rows=600, loops=10)
                                            Output: l_orderkey[0],l_quantity[4]
                        -> PhysicScanTable lineitem (inccost=6005, cost=6005, rows=601) (actual rows=0)
                            Output: l_quantity[4],l_orderkey[0]


