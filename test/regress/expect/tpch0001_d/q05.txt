select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'ASIA'
	and o_orderdate >= date '1994-01-01'
	and o_orderdate < date '1994-01-01' + interval '1' year
group by
	n_name
order by
	revenue desc
Total cost: 10334.97, memory=3701
PhysicOrder  (inccost=10334.97, cost=82.97, rows=25, memory=825) (actual rows=0)
    Output: n_name[0],{sum(l_extendedprice*(1-l_discount))}[1]
    Order by: {sum(l_extendedprice*(1-l_discount))}[1]
    -> PhysicHashAgg  (inccost=10252, cost=59, rows=25, memory=1650) (actual rows=0)
        Output: {n_name}[0],{sum(l_extendedprice*(1-l_discount))}[1]
        Aggregates: sum(l_extendedprice[2]*(1-l_discount[5]))
        Group by: n_name[0]
        -> PhysicGather Threads: 40 (inccost=10193, cost=91, rows=82) (actual rows=0)
            Output: n_name[3],{l_extendedprice*(1-l_discount)}[4],l_extendedprice[5],{(1-l_discount)}[6],1,l_discount[7]
            -> PhysicHashJoin  (inccost=10102, cost=162, rows=9, memory=360) (actual rows=0, loops=10)
                Output: n_name[3],{l_extendedprice*(1-l_discount)}[4],l_extendedprice[5],{(1-l_discount)}[6],1,l_discount[7]
                Filter: (c_custkey[1]=o_custkey[8] and c_nationkey[2]=s_nationkey[9])
                -> PhysicRedistribute  (inccost=165, cost=15, rows=15) (actual rows=15, loops=10)
                    Output: {1}[0],c_custkey[1],c_nationkey[2]
                    -> PhysicScanTable customer (inccost=150, cost=150, rows=15) (actual rows=15, loops=10)
                        Output: 1,c_custkey[0],c_nationkey[3]
                -> PhysicRedistribute  (inccost=9775, cost=50, rows=50) (actual rows=0, loops=10)
                    Output: n_name[0],{l_extendedprice*(1-l_discount)}[1],l_extendedprice[2],{(1-l_discount)}[3],l_discount[4],o_custkey[5],s_nationkey[6]
                    -> PhysicHashJoin  (inccost=9725, cost=587, rows=495, memory=330) (actual rows=0, loops=10)
                        Output: n_name[0],{l_extendedprice*(1-l_discount)}[3],l_extendedprice[4],{(1-l_discount)}[5],l_discount[6],o_custkey[7],s_nationkey[1]
                        Filter: l_suppkey[8]=s_suppkey[2]
                        -> PhysicHashJoin  (inccost=94, cost=12, rows=5, memory=160) (actual rows=0, loops=10)
                            Output: n_name[2],s_nationkey[0],s_suppkey[1]
                            Filter: s_nationkey[0]=n_nationkey[3]
                            -> PhysicBroadcast  (inccost=20, cost=10, rows=10) (actual rows=10, loops=10)
                                Output: s_nationkey[3],s_suppkey[0]
                                -> PhysicScanTable supplier (inccost=10, cost=10, rows=1) (actual rows=1, loops=10)
                                    Output: s_nationkey[3],s_suppkey[0]
                            -> PhysicHashJoin  (inccost=62, cost=32, rows=5, memory=8) (actual rows=5, loops=10)
                                Output: n_name[1],n_nationkey[2]
                                Filter: n_regionkey[3]=r_regionkey[0]
                                -> PhysicScanTable region (inccost=5, cost=5, rows=1) (actual rows=1, loops=10)
                                    Output: r_regionkey[0]
                                    Filter: r_name[1]='ASIA'
                                -> PhysicScanTable nation (inccost=25, cost=25, rows=25) (actual rows=25, loops=10)
                                    Output: n_name[1],n_nationkey[0],n_regionkey[2]
                        -> PhysicHashJoin  (inccost=9044, cost=1539, rows=892, memory=368) (actual rows=0)
                            Output: {l_extendedprice*(1-l_discount)}[2],l_extendedprice[3],{(1-l_discount)}[4],l_discount[5],o_custkey[0],l_suppkey[6]
                            Filter: l_orderkey[7]=o_orderkey[1]
                            -> PhysicScanTable orders (inccost=1500, cost=1500, rows=23) (actual rows=0)
                                Output: o_custkey[1],o_orderkey[0]
                                Filter: (o_orderdate[4]>='1994-01-01' and o_orderdate[4]<'1/1/1995 12:00:00 AM')
                            -> PhysicScanTable lineitem (inccost=6005, cost=6005, rows=601) (actual rows=0)
                                Output: l_extendedprice[5]*(1-l_discount[6]),l_extendedprice[5],(1-l_discount[6]),l_discount[6],l_suppkey[2],l_orderkey[0]


